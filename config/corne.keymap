/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                    if-layers = <1 2>;
                    then-layer = <3>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LCTRL &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |   SEL 0  |   SEL 1  |   SEL 2  |   SEL 3  |   SEL 4  |           |          |        |        |        |         |  BKSP  |
// | CTRL |          |  CLR_ALL |  BT_PRV  |  BT_CLR  |  BT_NXT  |           | RGB_TOG  |  BR+   |  HUE+  |  SAT+  |  SPD+   |  EFF+  |
// | SHFT |  DISC 0  |  DISC 1  |  DISC 2  |  DISC 3  |  DISC 4  |           |  ORANGE  |  BR-   |  HUE-  |  SAT-  |  SPD-   |  EFF-  |
//                                             | GUI |     | SPC |           | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3      &bt BT_SEL 4      &trans                              &trans             &trans            &trans            &trans            &kp BSPC
   &kp LCTRL &trans          &bt BT_CLR_ALL  &bt BT_PRV      &bt BT_CLR        &bt BT_NXT        &rgb_ug RGB_TOG                     &rgb_ug RGB_BRI    &rgb_ug RGB_HUI   &rgb_ug RGB_SAI   &rgb_ug RGB_SPI   &rgb_ug RGB_EFF
   &kp LSHFT &bt BT_DISC 0   &bt BT_DISC 1   &bt BT_DISC 2   &bt BT_DISC 3     &bt BT_DISC 4     &rgb_ug RGB_COLOR_HSB(42, 100, 100) &rgb_ug RGB_BRD    &rgb_ug RGB_HUD   &rgb_ug RGB_SAD   &rgb_ug RGB_SPD   &rgb_ug RGB_EFR
                                             &kp LGUI   &trans   &kp SPACE                         &kp RET   &trans   &kp RALT
                        >;
                };
        };
                setting_layer {
// -----------------------------------------------------------------------------------------
// |  TAB | BT_SEL 0  | BT_SEL 1  | BT_SEL 2  | BT_SEL 3  | BT_SEL 4  |           |                             |           |           |           |           |  BKSP     |
// | CTRL | CLR_ALL   |  BT_CLR   |           |  BT_PRV   |  BT_NXT   |           |         RGB_TOG             |  RGB_BRI  |  RGB_HUI  |  RGB_SAI  |  RGB_SPI  |  RGB_EFF  |
// | SHFT | BT_DISC 0 | BT_DISC 1 | BT_DISC 2 | BT_DISC 3 | BT_DISC 4 |           | RGB_COLOR_HSB(42, 100, 100) |  RGB_BRD  |  RGB_HUD  |  RGB_SAD  |  RGB_SPD  |  RGB_EFR  |
//                                                  | GUI |     | SPC |           | ENT |     | ALT |
                        bindings = <
   &kp LCTRL &bt BT_CLR_ALL  &bt BT_CLR      &trans          &bt BT_NXT        &bt BT_NXT        &trans &trans &trans &trans &trans &trans
   &kp LSHFT &bt BT_DISC 0   &bt BT_DISC 1   &bt BT_DISC 2   &bt BT_DISC 3     &bt BT_DISC 4     &trans &trans &trans &trans &trans &trans
                                                             &kp LGUI &trans   &kp SPACE         &kp RET   &trans    &kp RALT
                                  >;
};


// &kp  TAB  &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3      &bt BT_SEL 4      &trans                              &trans             &trans            &trans            &trans            &kp BSPC
// &kp LCTRL &bt BT_CLR_ALL  &bt BT_CLR      &trans          &bt BT_PRV        &bt BT_NXT        &rgb_ug RGB_TOG                     &rgb_ug RGB_BRI    &rgb_ug RGB_HUI   &rgb_ug RGB_SAI   &rgb_ug RGB_SPI   &rgb_ug RGB_EFF
// &kp LSHFT &bt BT_DISC 0   &bt BT_DISC 1   &bt BT_DISC 2   &bt BT_DISC 3     &bt BT_DISC 4     &rgb_ug RGB_COLOR_HSB(42, 100, 100) &rgb_ug RGB_BRD    &rgb_ug RGB_HUD   &rgb_ug RGB_SAD   &rgb_ug RGB_SPD   &rgb_ug RGB_EFR
//                                           &kp LGUI        &trans        &kp SPACE                &kp RET        &trans        &kp RALT

