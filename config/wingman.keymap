/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>	
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
        conditional_layers {
            compatible = "zmk,conditional-layers";
            adjust_layer {
                if-layers = <LOWER RAISE>;
                then-layer = <ADJUST>;
            };
        };

        keymap {
                compatible = "zmk,keymap";
	
                default_layer {
                            // -----------------------------------------------------------------------------------------
                            // | ESC  |  Q  |  W  |  E  |  R  |  T  |               |  Y  |  U  |  I  |  O  |  P  | BKSP |
                            // | TAB  |  A  |  S  |  D  |  F  |  G  |               |  H  |  J  |  K  |  L  |  ;  |  '   |
                            // | CTRL |  Z  |  X  |  C  |  V  |  B  |               |  N  |  M  |  ,  |  .  |  /  | ESC  |
                            //                          | GUI | LWR | SPC |   | ENT | RSE | ALT |
                        bindings = <
                            &kp ESC   &kp Q &kp W &kp E     &kp R &kp T       &kp Y   &kp U &kp I     &kp O   &kp P    &kp BSPC
                            &kp TAB   &kp A &kp S &kp D     &kp F &kp G       &kp H   &kp J &kp K     &kp L   &kp SEMI &kp SQT
                            &kp LCTRL &kp Z &kp X &kp C     &kp V &kp B       &kp N   &kp M &kp COMMA &kp DOT &kp FSLH &kp RSHIFT
                                                  &kp LGUI  &mo 1 &kp SPACE   &kp RET &mo 2 &kp RALT
                        >;
                };

                lower_layer{
                        // -----------------------------------------------------------------------------------------
                        // |  `   |  1  |  2  |  3  |  4  |  5  |           |  6  |  7  |  8  |  9  |  0  | BKSP |
                        // | TAB  |  !  |  @  |  #  |  $  |  %  |           |  ^  |  &  |  *  |  (  |  )  |   |  |
                        // | CTRL |  =  |  -  |  +  |  {  |  }  |           |  [  |  ]  |  ;  |  :  |  \  |      |
                        //                    |     |     |     |     |     |     |     |
                        bindings = <
                            &kp GRAVE &kp N1    &kp N2    &kp N3   &kp N4   &kp N5                            &kp N6    &kp N7   &kp N8    &kp N9    &kp N0   &kp BSPC
                            &kp ESC   &kp EXCL  &kp AT    &kp HASH &kp DLLR &kp PRCNT                         &kp CARET &kp AMPS &kp ASTRK &kp LPAR  &kp RPAR &kp PIPE
                            &kp LSHFT &kp EQUAL &kp MINUS &kp PLUS &kp LBRC &kp RBRC                          &kp LBKT  &kp RBKT &kp SEMI  &kp COLON &kp BSLH &trans
                                                                   &kp LGUI &trans    &kp SPACE       &kp RET &trans    &kp RALT
                        >;

                };

                raise_layer {
                            // -----------------------------------------------------------------------------------------
                            // |      |   F1   |   F2   |   F3  |   F4    |   F5    |               |  F6  |  F7   |  F8  |  F9   |  F10  |  F11  |
                            // |      |  INS   |  PSCR  |  GUI  |         |         |               | PGUP |  HOM  |   ↑  |  END  |       |  F12  |
                            // | UNDO |  REDO  |  CUT   |  COPY |  PASTE  |         |               | PGDN |   ←   |   ↓  |   →   |  DEL  | BCSP  |
                            //                                  |         |         |       |       | RSE | CTRL | |
                            //
                        bindings = <
                            &trans     &kp F1     &kp F2    &kp F3     &kp F4      &kp F5                           &kp F6    &kp F7   &kp F8   &kp F9    &kp F10 &kp F11
                            &trans     &kp INS    &kp PSCRN &kp C_MENU &trans      &trans                           &kp PG_UP &kp HOME &kp UP   &kp END   &trans  &kp F12
                            &kp K_UNDO &kp K_REDO &kp K_CUT &kp K_COPY &kp K_PASTE &trans                           &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &kp DEL &studio_unlock
                                                                       &kp LGUI    &trans &kp SPACE         &kp RET &trans    &kp RCTRL
                        >;
                };

                function_layer {
                        // -----------------------------------------------------------------------------------------
                        // | BTCLR  | BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |      |
                        // | EXTPWR |     |     |     |     |     |   |     |     |     |     |     |      |
                        // |        |  V- |  V+ | Prev| Pau | Next|   |     |     |     |     |     |      |
                        //                      | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
                            &bt BT_CLR        &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                            &trans &trans &trans &trans &trans &out OUT_TOG
                            &ext_power EP_TOG &trans       &trans       &trans       &trans       &trans                                  &trans &trans &trans &trans &trans &trans
                            &none             &kp C_VOL_DN &kp C_VOL_UP &kp C_PREV   &kp C_PP     &kp C_NEXT                              &trans &trans &trans &trans &trans &trans
                                                                                     &kp LGUI     &trans       &kp SPACE         &kp RET  &trans   &kp RALT
                        >;
                };

                additional_layer{
                    status="reserved";
                };

                additional_layer2{
                    status="reserved";
                };
        };
};
